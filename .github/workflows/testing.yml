name: Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: |
        bun install --frozen-lockfile
        bun add -g rimraf
    
    - name: Run type checking
      run: bun run typecheck
    
    - name: Build project
      run: bun run build
    
    - name: Run tests
      run: bun test
    
    - name: Test CLI functionality
      run: |
        bun dist/cli.js --help
        echo '{ "test": true }' > test.tson
        bun dist/cli.js test.tson
        rimraf test.tson
      shell: bash

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Check TypeScript compilation
      run: npm run typecheck
    
    - name: Build project
      run: npm run build

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: bun audit
    
    - name: Check for vulnerabilities
      run: bun audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run tests with coverage
      run: npm test
    
    # Upload coverage to Codecov (optional)
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage/lcov.info
    #     flags: unittests
    #     name: codecov-umbrella

  compatibility:
    name: Package Compatibility Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Pack package
      run: bun pack
    
    - name: Test package installation
      run: |
        mkdir test-install
        cd test-install
        bun init -y
        bun add ../tson-*.tgz
        bun -e "const tson = require('tson'); console.log('Package installed successfully');"
        cd ..
        rimraf test-install
         rimraf tson-*.tgz

  examples:
    name: Test Examples
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Test TSON examples
      run: |
        # Create example TSON files
        mkdir -p examples
        
        # Basic example
        cat > examples/basic.tson << 'EOF'
        // Basic TSON example
        const APP_NAME = "Test App";
        {
          name: APP_NAME,
          version: "1.0.0",
          features: [
            "auth",
            "logging",
          ]
        }
        EOF
        
        # Test parsing
        bun dist/cli.js examples/basic.tson
        
        # Clean up
        rimraf examples
      shell: bash